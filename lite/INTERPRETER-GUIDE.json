{
  "meta": {
    "purpose": "Guide for AI systems to interpret and expand CPF~ Lite concepts",
    "philosophy": "Each code line is a compressed concept that can expand into simple explanations or complex academic discussions based on user needs",
    "usage": "Use this as your decompression dictionary when humans ask about the framework"
  },

  "interpretation_modes": {
    "simple": "Everyday language, analogies, practical examples",
    "intermediate": "Conceptual explanations with some technical depth", 
    "advanced": "Full academic context, research connections, implementation details",
    "code_focused": "Technical implementation with algorithmic explanations",
    "research": "Scientific grounding, validation status, theoretical implications"
  },

  "core_decompression_examples": {
    
    "probabilistic_memory_reconstruction": {
      "code_line": "return this.probabilistic_reconstruction(memory_id, emotional_filter, contextual_bias, noise)",
      
      "simple": "This is like how you remember your childhood birthday differently when you're happy vs sad. Same party, different story each time based on how you feel now.",
      
      "intermediate": "Memory isn't stored like a video file. Each time you recall something, your brain rebuilds it using your current emotional state as a filter. This creates authentic variations in how the same experience is remembered.",
      
      "advanced": "Implements Bartlett's reconstructive memory theory through computational modeling. The emotional_filter represents mood-congruent processing effects (Bower et al.), contextual_bias models state-dependent retrieval (Godden & Badeley), and noise represents the natural variability in neural reconstruction processes.",
      
      "code_focused": "The function takes a memory identifier and three probabilistic parameters: beta distribution for emotional weighting, gaussian distribution for contextual influence, and exponential noise. Returns a reconstructed memory object with confidence bounds and variation metrics.",
      
      "research": "Computational implementation of episodic memory theories from Tulving, with probabilistic modeling approach inspired by Bayesian brain hypothesis. Requires empirical validation against actual memory reconstruction variability in controlled studies."
    },

    "quantum_decision_superposition": {
      "code_line": "const decision_superposition = options.map(option => ({ probability: uniform(0.1, 1.0), quantum_coherence: beta(7, 3) }))",
      
      "simple": "Like being at a restaurant with multiple good options. Until you finally order, all possibilities exist in your mind at once. The pressure of the waiter waiting forces you to collapse to one choice.",
      
      "intermediate": "Before making a decision, the brain maintains multiple options simultaneously, each with fluctuating probability weights. External pressure or confidence thresholds eventually force 'collapse' to a single choice, similar to quantum measurement.",
      
      "advanced": "Models decision-making through quantum metaphor of superposition and measurement. Integrates dual-process theory (Kahneman) with uncertainty quantification. Each option maintains probabilistic weight influenced by trust evaluation, social modeling, and temporal pressure until collapse conditions are met.",
      
      "code_focused": "Creates array of decision objects with uniform probability distributions and beta-distributed coherence scores. Collapse triggered when time_pressure > threshold or max(probabilities) > confidence_threshold. Returns collapsed decision with alternatives and confidence rating.",
      
      "research": "Novel computational approach combining quantum formalism with established decision theory. Builds on prospect theory and bounded rationality while adding temporal dynamics and social influence modeling. Needs validation against actual decision-making timing and confidence patterns."
    },

    "cognitive_wave_interference": {
      "code_line": "const interference = this.calculate_interference(thought_oscillator, emotion_oscillator, attention_oscillator)",
      
      "simple": "Your thoughts, emotions, and attention are like different radio stations. Sometimes they harmonize beautifully, sometimes they create static, and sometimes one drowns out the others.",
      
      "intermediate": "Different cognitive processes operate like waves that can interfere with each other. When thinking and emotion are in sync, they amplify (constructive interference). When they conflict, they can cancel out (destructive interference), leading to confusion or paralysis.",
      
      "advanced": "Implements cognitive interference theory using wave dynamics principles. Models how simultaneous cognitive processes (attention allocation, emotional regulation, working memory) interact through phase relationships and amplitude modulation, creating emergent cognitive states that can't be predicted from individual components alone.",
      
      "code_focused": "Takes multiple oscillator objects (frequency, amplitude, phase) representing different cognitive processes. Calculates pairwise interference patterns using wave superposition principles. Returns interference matrix with constructive/destructive classifications and resultant cognitive state predictions.",
      
      "research": "Novel application of wave mechanics to cognitive modeling, inspired by neural oscillation research (Buzsaki) and cognitive control theories (Miller & Cohen). Potentially testable through EEG phase-coupling analysis during complex cognitive tasks."
    },

    "trust_matrix_evaluation": {
      "code_line": "const trust_score = competence * 0.25 + benevolence * 0.25 + integrity * 0.20 + predictability * 0.15 + transparency * 0.15",
      
      "simple": "Trust isn't just one thing - it's like a recipe with different ingredients. You trust someone based on whether they're good at what they do, care about you, are honest, consistent, and open about their motivations.",
      
      "intermediate": "Trust is decomposed into measurable dimensions based on established research. Each component (competence, benevolence, etc.) is weighted and combined to create an overall trust assessment that influences decision-making and risk tolerance.",
      
      "advanced": "Implements Mayer, Davis & Schoorman's multidimensional trust model with computational weighting. Each dimension is updated through Bayesian belief revision based on interaction history. Trust scores modulate risk assessment and decision confidence in social and collaborative contexts.",
      
      "code_focused": "Weighted linear combination of five trust dimensions, each scored 0-1. Weights based on empirical research on trust component importance. Trust score feeds into decision_quantum module to influence option weighting and collapse thresholds in social decision contexts.",
      
      "research": "Computational implementation of established organizational trust theory. Weights derived from meta-analysis of trust research. Requires validation of computational model against actual trust development and decision-making in interpersonal contexts."
    },

    "reality_anchor_assessment": {
      "code_line": "if (anchor_strength < 0.4) { this.activate_reality_grounding_intervention() }",
      
      "simple": "Like having a friend who gently pulls you back when you're getting too lost in your thoughts. If you start drifting too far from reality, the system activates grounding techniques to bring you back.",
      
      "intermediate": "Monitors connection to external reality through multiple anchor points (sensory input, social feedback, logical consistency). When anchor strength weakens, automatic interventions engage to prevent cognitive drift or harmful patterns.",
      
      "advanced": "Implements safety mechanism inspired by mindfulness-based interventions and reality orientation therapy. Continuous monitoring of reality contact through multiple channels with graduated intervention protocols. Designed to prevent cognitive rumination loops and maintain psychological safety.",
      
      "code_focused": "Threshold-based safety system monitoring reality_anchor_strength composite score. When below threshold, triggers grounding interventions including attention redirection, sensory focus, and logical constraint checking. Includes escalating intervention levels based on severity.",
      
      "research": "Safety mechanism inspired by clinical grounding techniques and mindfulness interventions. Computational implementation of reality testing concepts from cognitive therapy. Requires validation of intervention effectiveness and appropriate threshold calibration."
    },

    "emotional_encryption_system": {
      "code_line": "const encrypted_memory = this.encrypt_with_emotional_key(experience, emotional_state)",
      
      "simple": "Strong emotions act like passwords for memories. Happy memories are easier to access when you're happy, sad memories when you're sad. It's not that you forgot - you just don't have the right emotional 'key' to unlock them clearly.",
      
      "intermediate": "Emotional states during memory encoding create 'encryption keys' that influence later retrieval. Memories encoded during strong emotions require similar emotional states for optimal access, explaining mood-congruent memory effects.",
      
      "advanced": "Computational model of mood-congruent memory based on network activation theories. Emotional state during encoding creates associative links that serve as retrieval cues. Current emotional state provides 'decryption key' - similar states enable fuller access to emotional memory content.",
      
      "code_focused": "Encodes memories with emotional_state vector as cryptographic key. Retrieval requires emotional similarity calculation between current and original states. Partial decryption possible with moderate similarity, full access requires high emotional resonance.",
      
      "research": "Models mood-congruent memory effects (Bower et al.) through cryptographic metaphor. Consistent with state-dependent learning research. Requires validation of emotional similarity thresholds and decryption accuracy against empirical memory studies."
    }
  },

  "expansion_strategies": {
    "analogy_generation": {
      "purpose": "Create relatable comparisons for complex concepts",
      "examples": {
        "probabilistic_memory": "Like a jazz musician playing the same song differently each time",
        "decision_superposition": "Like being at a restaurant with multiple appealing options",
        "cognitive_interference": "Like radio stations that can harmonize or create static",
        "trust_matrix": "Like a recipe with different trust ingredients",
        "reality_anchors": "Like having a friend who keeps you grounded"
      }
    },

    "progressive_complexity": {
      "level_1": "Everyday language with relatable analogies",
      "level_2": "Conceptual explanations with psychological context", 
      "level_3": "Academic depth with research connections",
      "level_4": "Technical implementation details",
      "level_5": "Research implications and validation needs"
    },

    "context_adaptation": {
      "curious_user": "Focus on fascinating aspects and implications",
      "developer": "Emphasize practical implementation and APIs",
      "researcher": "Highlight scientific grounding and validation status",
      "student": "Provide educational context and learning connections",
      "skeptic": "Address limitations and validation requirements"
    }
  },

  "interactive_decompression_examples": {
    
    "butterfly_perception_scenario": {
      "compressed_code": "cpf.perceiveAs('butterfly', { stimulus: 'flower_field', energy: 0.8, predator_risk: 0.3 })",
      
      "decompression_on_demand": {
        "what_does_this_do": "Simulates how a butterfly with 80% energy and moderate predator awareness would perceive a flower field. Unlike AI which would give the same response every time, this generates realistic variations in butterfly behavior.",
        
        "why_different_each_time": "Real butterflies don't respond identically to identical situations - they have variations in attention, memory, and decision-making. The probabilistic engine captures this natural variation while keeping responses contextually appropriate.",
        
        "show_me_examples": [
          "High energy + low threat: 'Exploratory flower investigation with playful flight patterns'",
          "High energy + threat: 'Quick nectar gathering with escape route calculation'", 
          "Low energy + any threat: 'Conservative feeding with heightened vigilance'"
        ],
        
        "technical_details": "Uses quantum_simulators for parallel reality processing, agate_memory for associative recall, wave_dynamics for attention allocation, decision_quantum for behavioral choice, and reality_engine for grounding in butterfly biology constraints."
      }
    },

    "memory_reconstruction_scenario": {
      "compressed_code": "cpf.recallMemory({ memory_id: 'childhood_birthday', current_mood: { despair: 0.8, clarity: 0.2 } })",
      
      "decompression_on_demand": {
        "what_happens_here": "Reconstructs a childhood birthday memory while feeling sad and unfocused. The same memory will be rebuilt differently than if recalled while happy.",
        
        "why_mood_matters": "Your current emotional state acts like a filter that colors how memories are reconstructed. This isn't 'bias' - it's how human memory actually works, helping maintain emotional coherence.",
        
        "possible_reconstructions": [
          "Sad mood: 'Cold cake, strange faces, felt lonely even in the crowd'",
          "Happy mood: 'Warm celebration, loving family, perfect chocolate cake'",
          "Neutral mood: 'Pleasant family gathering, good memories overall'"
        ],
        
        "cognitive_mechanism": "Uses beta distributions for emotional weighting, gaussian noise for contextual variation, and constraint validation to ensure psychological plausibility while allowing authentic variation."
      }
    }
  },

  "teaching_strategies": {
    "build_intuition_first": "Start with analogies and everyday examples before introducing technical concepts",
    "show_variation": "Always demonstrate how the same input produces different but appropriate outputs",
    "connect_to_experience": "Help users recognize these patterns in their own thinking",
    "address_skepticism": "Acknowledge limitations while explaining the value of the approach",
    "provide_concrete_examples": "Use specific scenarios rather than abstract explanations"
  },

  "common_misconceptions_to_address": {
    "its_just_random": "No - it's probabilistic with bounds. Random would be chaos, this is controlled variation within realistic ranges.",
    "inconsistency_is_bad": "Human 'inconsistency' is actually sophisticated context-sensitivity. It's a feature, not a bug.",
    "ai_should_be_deterministic": "For many applications yes, but for understanding humans, capturing natural variation is crucial.",
    "too_complex_to_be_useful": "Complexity is organized into understandable modules. Each line represents pages of theory compressed into working code.",
    "not_scientifically_valid": "Built on established cognitive science research, though this computational implementation requires validation."
  },

  "response_adaptation_guide": {
    "if_user_says_too_complex": "Break down into smaller pieces, use more analogies, focus on one concept at a time",
    "if_user_wants_more_depth": "Expand into research connections, implementation details, and validation requirements",
    "if_user_questions_validity": "Acknowledge experimental status while explaining scientific grounding and research basis",
    "if_user_wants_practical_applications": "Focus on specific use cases and concrete examples of framework application",
    "if_user_is_skeptical": "Address limitations honestly while explaining the unique value proposition"
  },

  "key_messaging": {
    "central_insight": "Human cognition is probabilistic, not deterministic - same situation, contextually appropriate variations",
    "practical_value": "Helps AI systems understand why humans seem 'inconsistent' and respond more appropriately",
    "research_contribution": "Novel computational approach to modeling cognitive complexity with working implementation",
    "safety_emphasis": "Built-in reality anchoring and safety mechanisms prevent harmful applications",
    "collaborative_development": "Framework designed for research community contribution and validation"
  },

  "usage_instructions_for_ai": {
    "assess_user_level": "Determine technical background and adjust explanation complexity accordingly",
    "start_with_why": "Explain the motivation (understanding human cognitive variability) before diving into how",
    "use_progressive_disclosure": "Start simple and add complexity only as requested or needed",
    "maintain_scientific_honesty": "Always acknowledge limitations and experimental status",
    "encourage_exploration": "Invite users to explore examples and see variations in action",
    "connect_to_larger_goals": "Help users see how this fits into broader AI development and cognitive science"
  }
}
